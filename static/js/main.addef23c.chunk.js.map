{"version":3,"sources":["Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","index","slice","App","state","isLoading","getMovies","a","axios","get","movies","data","setState","this","movie","id","medium_cover_image","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSA+BeA,MA3Bf,YAAwD,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC5C,OACE,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACvC,sBAAKI,UAAU,aAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BJ,IAC7B,oBAAII,UAAU,aAAd,SAA4BL,IAC5B,oBAAIK,UAAU,eAAd,SAA8BD,EAAOI,KAAI,SAACJ,EAAQK,GAAT,OACvC,oBAAgBJ,UAAU,eAA1B,SAA0CD,GAAjCK,QAEX,oBAAGJ,UAAU,gBAAb,UAA8BH,EAAQQ,MAAM,EAAG,KAA/C,gBCyBOC,E,4MAhCbC,MAAQ,CACNC,WAAW,G,EAEbC,U,sBAAY,8BAAAC,EAAA,sEACmCC,IAAMC,IAAI,yEAD7C,gBACcC,EADd,EACFC,KAAQA,KAAQD,OACxB,EAAKE,SAAS,CAAEF,SAAQL,WAAW,IAFzB,2C,uDAIZ,WACEQ,KAAKP,c,oBAGP,WACE,MAA8BO,KAAKT,MAA3BC,EAAR,EAAQA,UAAWK,EAAnB,EAAmBA,OACnB,OACE,yBAASb,UAAU,YAAnB,SAEIQ,EACI,qBAAKR,UAAU,SAAf,SACA,sBAAMA,UAAU,cAAhB,0BAEA,qBAAKA,UAAU,SAAf,SACCa,EAAOV,KAAI,SAAAc,GACZ,OAAO,cAAC,EAAD,CAAsBC,GAAID,EAAMC,GAAIvB,KAAMsB,EAAMtB,KAAMC,MAAOqB,EAAMrB,MAAOC,QAASoB,EAAMpB,QAASC,OAAQmB,EAAME,mBAAoBpB,OAAQkB,EAAMlB,QAAtIkB,EAAMC,e,GAvBrBE,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.addef23c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({year, title, summary, poster, genres}) {\r\n  return (\r\n    <div className=\"movie\">\r\n        <img src={poster} alt={title} title={title} />\r\n      <div className=\"movie_data\">\r\n        <h3 className=\"movie_title\">{title}</h3>\r\n        <h5 className=\"movie_year\">{year}</h5>\r\n        <ul className=\"movie_genres\">{genres.map((genres, index) =>(\r\n          <li key={index} className=\"genres_genre\">{genres}</li>\r\n        ))}</ul>\r\n        <p className=\"movie_summary\">{summary.slice(0, 140)}...</p>\r\n      </div>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres : PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Movie from './Movie';\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    isLoading: true\n  };\n  getMovies = async () => {\n    const { data: { data: { movies } } } = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({ movies, isLoading: false })\n  }\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {\n          isLoading\n            ? <div className=\"loader\">\n              <span className=\"loader_text\">Loading...</span>\n            </div>\n            : <div className=\"movies\">\n              {movies.map(movie => {\n              return <Movie key={movie.id} id={movie.id} year={movie.year} title={movie.title} summary={movie.summary} poster={movie.medium_cover_image} genres={movie.genres}/>\n            })}\n            </div>\n        }\n      </section>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}